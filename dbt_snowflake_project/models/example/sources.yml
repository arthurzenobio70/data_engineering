version: 2

sources:
  - name: raw_data
    description: "Raw data source from operational systems"
    database: finance_db
    schema: raw
    
    # Source-level configuration
    meta:
      owner: "data-engineering-team"
      data_source: "operational_database"
      
    # Source-level tests
    tests:
      - dbt_expectations.expect_table_row_count_to_be_between:
          min_value: 1
          max_value: 1000000
          
    tables:
      - name: customers
        description: "Customer master data including demographics and contact information"
        columns:
          - name: id
            description: "Unique customer identifier"
            tests:
              - unique
              - not_null
          - name: name
            description: "Customer full name"
            tests:
              - not_null
          - name: email
            description: "Customer email address"
            tests:
              - not_null
              - dbt_expectations.expect_column_values_to_match_regex:
                  regex: '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$'
          - name: country
            description: "Customer country of residence"
            tests:
              - not_null
              
        # Table-level tests
        tests:
          - dbt_expectations.expect_table_row_count_to_be_between:
              min_value: 50
              max_value: 10000
              
        # Freshness checks
        freshness:
          warn_after: {count: 24, period: hour}
          error_after: {count: 48, period: hour}
          
        # Loading configuration
        loaded_at_field: _loaded_at
        
      - name: orders
        description: "Order transactions including status and dates"
        columns:
          - name: id
            description: "Unique order identifier"
            tests:
              - unique
              - not_null
          - name: customer_id
            description: "Foreign key to customers table"
            tests:
              - not_null
              - relationships:
                  to: source('raw_data', 'customers')
                  field: id
          - name: order_date
            description: "Date when the order was placed"
            tests:
              - not_null
              - dbt_expectations.expect_column_values_to_be_between:
                  min_value: '2020-01-01'
                  max_value: '2030-12-31'
          - name: total_amount
            description: "Total order amount in base currency"
            tests:
              - not_null
              - dbt_expectations.expect_column_values_to_be_between:
                  min_value: 0
                  max_value: 100000
          - name: status
            description: "Current order status"
            tests:
              - not_null
              - accepted_values:
                  values: ['Pending', 'Completed', 'Cancelled', 'Processing', 'Shipped']
                  
        # Freshness checks
        freshness:
          warn_after: {count: 12, period: hour}
          error_after: {count: 24, period: hour}
          
        loaded_at_field: _loaded_at
        
      - name: order_items
        description: "Individual line items within orders"
        columns:
          - name: id
            description: "Unique order item identifier"
            tests:
              - unique
              - not_null
          - name: order_id
            description: "Foreign key to orders table"
            tests:
              - not_null
              - relationships:
                  to: source('raw_data', 'orders')
                  field: id
          - name: product_id
            description: "Foreign key to products table"
            tests:
              - not_null
              - relationships:
                  to: source('raw_data', 'products')
                  field: id
          - name: quantity
            description: "Quantity of the product ordered"
            tests:
              - not_null
              - dbt_expectations.expect_column_values_to_be_between:
                  min_value: 1
                  max_value: 1000
          - name: unit_price
            description: "Price per unit of the product"
            tests:
              - not_null
              - dbt_expectations.expect_column_values_to_be_between:
                  min_value: 0
                  max_value: 10000
                  
        # Freshness checks
        freshness:
          warn_after: {count: 12, period: hour}
          error_after: {count: 24, period: hour}
          
        loaded_at_field: _loaded_at
        
      - name: products
        description: "Product catalog with pricing and category information"
        columns:
          - name: id
            description: "Unique product identifier"
            tests:
              - unique
              - not_null
          - name: name
            description: "Product name"
            tests:
              - not_null
          - name: category
            description: "Product category"
            tests:
              - not_null
          - name: price
            description: "Current product price"
            tests:
              - not_null
              - dbt_expectations.expect_column_values_to_be_between:
                  min_value: 0
                  max_value: 10000
                  
        # Freshness checks
        freshness:
          warn_after: {count: 24, period: hour}
          error_after: {count: 72, period: hour}
          
        loaded_at_field: _loaded_at