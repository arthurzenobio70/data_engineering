[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src", "dags", "dataproc_jobs"]

[project]
name = "yahoo-finance-pipeline"
version = "1.0.0"
description = "ðŸš€ Serverless data pipeline for stock market analysis using Yahoo Finance, GCP, and PySpark"
authors = [
    {name = "Pipeline Team", email = "team@stockpipeline.dev"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
keywords = ["finance", "data-pipeline", "stock-market", "gcp", "airflow", "pyspark"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Office/Business :: Financial",
    "Topic :: Scientific/Engineering :: Information Analysis",
]

dependencies = [
    # Core dependencies for Yahoo Finance stock market pipeline
    "yfinance>=0.2.65",
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    
    # Google Cloud dependencies
    "google-cloud-storage>=2.10.0",
    "google-cloud-bigquery>=3.11.0",
    "pyspark>=3.4.0",
    
    # Data processing dependencies
    "requests>=2.31.0",
    "pyarrow>=12.0.0",
    
    # Configuration and utilities
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    # Development tools
    "pytest>=7.4.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.11.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
    "jupyter>=1.0.0",
    "jupyterlab>=4.0.0",
    "ipython>=8.0.0",
]

airflow = [
    # Airflow dependencies (for local development)
    "apache-airflow>=2.7.0",
    "apache-airflow-providers-google>=10.10.0",
]

monitoring = [
    # Monitoring and observability
    "prometheus-client>=0.17.0",
    "opencensus-ext-gcp>=1.1.0",
]

all = [
    "yahoo-finance-pipeline[dev,airflow,monitoring]",
]

[project.urls]
Homepage = "https://github.com/your-username/yahoo-finance-pipeline"
Repository = "https://github.com/your-username/yahoo-finance-pipeline"
Documentation = "https://github.com/your-username/yahoo-finance-pipeline#readme"
Issues = "https://github.com/your-username/yahoo-finance-pipeline/issues"

[tool.uv]
dev-dependencies = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
target-version = ['py38']
include = '\.pyi?$'
line-length = 88
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["src", "dags", "dataproc_jobs"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py",
    "src/config/__init__.py",
    "src/extractors/__init__.py",
    "src/transformers/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 